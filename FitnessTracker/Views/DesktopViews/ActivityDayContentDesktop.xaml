<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:effects="clr-namespace:Syncfusion.Maui.Toolkit.EffectsView;assembly=Syncfusion.Maui.Toolkit"
             xmlns:calendar="clr-namespace:Syncfusion.Maui.Calendar;assembly=Syncfusion.Maui.Calendar"
             xmlns:chart="clr-namespace:Syncfusion.Maui.Toolkit.Charts;assembly=Syncfusion.Maui.Toolkit"
             xmlns:popup="clr-namespace:Syncfusion.Maui.Popup;assembly=Syncfusion.Maui.Popup"
             xmlns:editors="clr-namespace:Syncfusion.Maui.Inputs;assembly=Syncfusion.Maui.Inputs"
             xmlns:inputLayout="clr-namespace:Syncfusion.Maui.Core;assembly=Syncfusion.Maui.Core"
             xmlns:picker="clr-namespace:Syncfusion.Maui.Picker;assembly=Syncfusion.Maui.Picker"
             xmlns:converter="clr-namespace:FitnessTracker"
             xmlns:model="clr-namespace:FitnessTracker"
             x:Class="FitnessTracker.ActivityDayContentDesktop">

    <ContentView.Resources>
        <converter:DurationToFormattedStringConverter x:Key="DurationConverter" />
        <converter:ActivityValueConverter x:Key="ActivityConverter" />
        <converter:ActivityIconConverter x:Key="ActivityIconConverter" />
        <converter:StepCalorieIconConverter x:Key="StepCalorieIconConverter" />
        <converter:StepCalorieConverter x:Key="StepCalorieConverter" />
        <converter:DateTimeToTimeSpanConverter x:Key="TimeSpanConverter" />
        <Style TargetType="inputLayout:SfTextInputLayout" x:Key="TextInputLayout">
            <Setter Property="ContainerBackground" Value="{AppThemeBinding Light={StaticResource White}, Dark={DynamicResource ContentBackground}}" />
            <Setter Property="ContainerType" Value="Outlined" />
            <Setter Property="HeightRequest" Value="70" />
            <Setter Property="InputViewPadding" Value="16, 0" />
            <Setter Property="HintLabelStyle">
                <Setter.Value>
                    <inputLayout:LabelStyle FontFamily="Roboto" FontSize="16"/>
                </Setter.Value>
            </Setter>
        </Style>
    </ContentView.Resources>

    <ContentView.Content>
        <Grid RowDefinitions="64, *">
            <Grid Grid.Row="0" ColumnDefinitions=".3*, .4*, .3*" Padding="16, 8">
                <popup:SfPopup x:Name="editpopup" HeightRequest="624" WidthRequest="480" ShowCloseButton="True" StaysOpen="True" Closed="editpopup_Closed" HeaderHeight="80" FooterHeight="88">
                    <popup:SfPopup.PopupStyle>
                        <popup:PopupStyle HeaderBackground="{AppThemeBinding Light={StaticResource White}, Dark={DynamicResource ContentBackground}}" HeaderFontFamily="Roboto" HeaderFontSize="24" FooterBackground="{AppThemeBinding Light={StaticResource White}, Dark={DynamicResource ContentBackground}}" HasShadow="True"/>
                    </popup:SfPopup.PopupStyle>
                    <popup:SfPopup.ContentTemplate>
                        <DataTemplate>
                            <Grid Background="{AppThemeBinding Light={StaticResource White}, Dark={DynamicResource ContentBackground}}" ChildAdded="OnChildAdded">
                                <!--View Activity-->
                                <VerticalStackLayout StyleId="_viewActivityContent" IsVisible="False" Spacing="30" Padding="16, 24">
                                    <VerticalStackLayout Spacing="10">
                                        <Label Text="{Binding Title}" FontFamily="Roboto" FontSize="24" FontAttributes="None" Style="{StaticResource Header}"/>
                                        <Label>
                                            <Label.FormattedText>
                                                <FormattedString>
                                                    <Span Text="{Binding ., Converter={StaticResource ActivityIconConverter}}" FontFamily="FitnessTrackerIcon" Style="{StaticResource SubHeader}" />
                                                    <Span Text="{Binding StartTime, StringFormat=' {0:dd MMMM, hh:mm tt}'}" FontSize="14" FontFamily="Roboto" Style="{StaticResource SubHeader}" />
                                                </FormattedString>
                                            </Label.FormattedText>
                                        </Label>
                                    </VerticalStackLayout>
                                    <HorizontalStackLayout Spacing="10" HorizontalOptions="Center">
                                        <HorizontalStackLayout Spacing="5">
                                            <Label Text="&#xe723;" FontFamily="FitnessTrackerIcon" FontSize="24" TextColor="#116DF9" HorizontalOptions="Center" VerticalOptions="Center"/>
                                            <Label Text="{Binding Steps}" FontSize="22" FontFamily="Roboto" FontAttributes="Bold" Style="{StaticResource Header}" />
                                        </HorizontalStackLayout>
                                        <HorizontalStackLayout Spacing="5">
                                            <Label Text="&#xe720;" FontFamily="FitnessTrackerIcon" FontSize="24" TextColor="#F4890B" HorizontalOptions="Center" VerticalOptions="Center"/>
                                            <Label Text="{Binding CaloriesBurned, StringFormat='{0} Cal'}" FontSize="22" FontFamily="Roboto" FontAttributes="Bold" Style="{StaticResource Header}" />
                                        </HorizontalStackLayout>
                                    </HorizontalStackLayout>
                                    <BoxView Background="{DynamicResource Border}" HeightRequest="1" />
                                    <Grid ColumnDefinitions="*, 100" Padding="16, 0">
                                        <HorizontalStackLayout Spacing="12">
                                            <Label Text="&#xe727;" FontSize="24" FontFamily="FitnessTrackerIcon" VerticalOptions="Center" HorizontalOptions="Center" Style="{StaticResource Icon}"/>
                                            <Label Text="Active time" FontSize="16" FontFamily="Roboto" Style="{StaticResource Header}" VerticalOptions="Center" />
                                        </HorizontalStackLayout>
                                        <Label Text="{Binding ., Converter={StaticResource DurationConverter}}" Grid.Column="1" FontSize="16" FontFamily="Roboto" Style="{StaticResource Header}" HorizontalOptions="End" VerticalOptions="Center"/>
                                    </Grid>
                                    <Grid ColumnDefinitions="*, 50" Padding="16, 0">
                                        <HorizontalStackLayout Spacing="12">
                                            <Label Text="&#xe726;" FontSize="24" FontFamily="FitnessTrackerIcon" VerticalOptions="Center" HorizontalOptions="Center" Style="{StaticResource Icon}"/>
                                            <Label Text="Distance" FontSize="16" FontFamily="Roboto" Style="{StaticResource Header}" VerticalOptions="Center" />
                                        </HorizontalStackLayout>
                                        <Label Text="{Binding Distance, StringFormat='{0:0} km'}" Grid.Column="1" FontSize="16" FontFamily="Roboto" Style="{StaticResource Header}" HorizontalOptions="End" VerticalOptions="End"/>
                                    </Grid>
                                    <Label Text="{Binding Remarks}" FontSize="16" FontFamily="Roboto" Style="{StaticResource Header}" />
                                </VerticalStackLayout>
                                <!--Edit Activity-->
                                <ScrollView StyleId="_editActivityContent" IsVisible="False" VerticalScrollBarVisibility="Never">
                                    <VerticalStackLayout Spacing="0" Padding="24" ChildAdded="OnChildAdded">
                                        <inputLayout:SfTextInputLayout Hint="Activity Type" Style="{StaticResource TextInputLayout}" ChildAdded="OnChildAdded">
                                            <editors:SfComboBox StyleId="_activityBox" IsClearButtonVisible="False" DropDownBackground="{DynamicResource ContentBackgroundAlt1}"/>
                                        </inputLayout:SfTextInputLayout>
                                        <inputLayout:SfTextInputLayout Hint="Activity Title" Style="{StaticResource TextInputLayout}" ChildAdded="OnChildAdded">
                                            <Entry StyleId="_activityTitle" HeightRequest="25" Text="{Binding Title, Mode=OneWay}"/>
                                        </inputLayout:SfTextInputLayout>
                                        <inputLayout:SfTextInputLayout Hint="Date" Style="{StaticResource TextInputLayout}" ChildAdded="OnChildAdded">
                                            <inputLayout:SfTextInputLayout.TrailingView>
                                                <effects:SfEffectsView WidthRequest="40" HeightRequest="40">
                                                    <effects:SfEffectsView.GestureRecognizers>
                                                        <TapGestureRecognizer Tapped="DatePicker_Tapped" />
                                                    </effects:SfEffectsView.GestureRecognizers>
                                                    <Label Text="&#xe72b;" FontSize="18" FontFamily="FitnessTrackerIcon" HorizontalOptions="Center" VerticalOptions="Center"/>
                                                </effects:SfEffectsView>
                                            </inputLayout:SfTextInputLayout.TrailingView>
                                            <Entry StyleId="_datePickerEntry" Text="{Binding StartTime, StringFormat='{0:MM/dd/yyyy}', Mode=OneWay}" IsReadOnly="True" Focused="datePickerEntry_Focused"/>
                                        </inputLayout:SfTextInputLayout>
                                        <picker:SfDatePicker StyleId="_datePicker" SelectedDate="{Binding StartTime, Mode=OneWay}" SelectionChanged="datePicker_SelectionChanged" OkButtonClicked="DatePickerButtonClicked" CancelButtonClicked="DatePickerButtonClicked" Mode="Dialog" Background="{AppThemeBinding Light={StaticResource White}, Dark={DynamicResource ContentBackground}}">
                                            <picker:SfDatePicker.FooterView >
                                                <picker:PickerFooterView Height="40" OkButtonText="Ok" CancelButtonText="Cancel" Background="{AppThemeBinding Light={StaticResource White}, Dark={DynamicResource ContentBackground}}"/>
                                            </picker:SfDatePicker.FooterView>
                                        </picker:SfDatePicker>
                                        <Grid ColumnDefinitions="*, *" ColumnSpacing="10">
                                            <inputLayout:SfTextInputLayout Grid.Column="0" Hint="Start" Style="{StaticResource TextInputLayout}" ChildAdded="OnChildAdded">
                                                <inputLayout:SfTextInputLayout.TrailingView>
                                                    <effects:SfEffectsView WidthRequest="40" HeightRequest="40">
                                                        <effects:SfEffectsView.GestureRecognizers>
                                                            <TapGestureRecognizer Tapped="StartTimePicker_Tapped" />
                                                        </effects:SfEffectsView.GestureRecognizers>
                                                        <Label Text="&#xe711;" FontSize="18" FontFamily="FitnessTrackerIcon" HorizontalOptions="Center" VerticalOptions="Center"/>
                                                    </effects:SfEffectsView>
                                                </inputLayout:SfTextInputLayout.TrailingView>
                                                <Entry StyleId="_startTimePickerEntry" Text="{Binding StartTime, StringFormat='{0:hh:mm tt}', Mode=OneWay}" IsReadOnly="True" Focused="startTimePickerEntry_Focused"/>
                                            </inputLayout:SfTextInputLayout>
                                            <inputLayout:SfTextInputLayout Grid.Column="1" Hint="End" Style="{StaticResource TextInputLayout}" ChildAdded="OnChildAdded">
                                                <inputLayout:SfTextInputLayout.TrailingView>
                                                    <effects:SfEffectsView WidthRequest="40" HeightRequest="40">
                                                        <effects:SfEffectsView.GestureRecognizers>
                                                            <TapGestureRecognizer Tapped="EndTimePicker_Tapped" />
                                                        </effects:SfEffectsView.GestureRecognizers>
                                                        <Label Text="&#xe711;" FontSize="18" FontFamily="FitnessTrackerIcon" HorizontalOptions="Center" VerticalOptions="Center"/>
                                                    </effects:SfEffectsView>
                                                </inputLayout:SfTextInputLayout.TrailingView>
                                                <Entry StyleId="_endTimePickerEntry" Text="{Binding EndTime, StringFormat='{0:hh:mm tt}', Mode=OneWay}" IsReadOnly="True" Focused="endTimePickerEntry_Focused"/>
                                            </inputLayout:SfTextInputLayout>
                                        </Grid>
                                        <picker:SfTimePicker StyleId="_startTimePicker" SelectedTime="{Binding StartTime, Converter={StaticResource TimeSpanConverter}, Mode=OneWay}" Mode="Dialog" SelectionChanged="startTimePicker_SelectionChanged" OkButtonClicked="TimePickerButtonClicked" CancelButtonClicked="TimePickerButtonClicked" Background="{AppThemeBinding Light={StaticResource White}, Dark={DynamicResource ContentBackground}}">
                                            <picker:SfTimePicker.FooterView>
                                                <picker:PickerFooterView Height="40" OkButtonText="Ok" CancelButtonText="Cancel" Background="{AppThemeBinding Light={StaticResource White}, Dark={DynamicResource ContentBackground}}"/>
                                            </picker:SfTimePicker.FooterView>
                                        </picker:SfTimePicker>
                                        <picker:SfTimePicker StyleId="_endTimePicker" SelectedTime="{Binding EndTime, Converter={StaticResource TimeSpanConverter}, Mode=OneWay}" Mode="Dialog" SelectionChanged="endTimePicker_SelectionChanged" OkButtonClicked="TimePickerButtonClicked" CancelButtonClicked="TimePickerButtonClicked" Background="{AppThemeBinding Light={StaticResource White}, Dark={DynamicResource ContentBackground}}">
                                            <picker:SfTimePicker.FooterView>
                                                <picker:PickerFooterView Height="40" OkButtonText="Ok" CancelButtonText="Cancel" Background="{AppThemeBinding Light={StaticResource White}, Dark={DynamicResource ContentBackground}}"/>
                                            </picker:SfTimePicker.FooterView>
                                        </picker:SfTimePicker>
                                        <inputLayout:SfTextInputLayout Hint="Energy expended" Style="{StaticResource TextInputLayout}" ChildAdded="OnChildAdded">
                                            <Entry StyleId="_energyExpended" HeightRequest="25" Text="{Binding CaloriesBurned, Mode=OneWay}"/>
                                        </inputLayout:SfTextInputLayout>
                                        <inputLayout:SfTextInputLayout Hint="Remarks" HeightRequest="192" InputViewPadding="16, 8" Style="{StaticResource TextInputLayout}" ChildAdded="OnChildAdded">
                                            <Editor StyleId="_remarks" Text="{Binding Remarks}"/>
                                        </inputLayout:SfTextInputLayout>
                                    </VerticalStackLayout>
                                </ScrollView>
                                <!--Delete Activity-->
                                <Label Text="Do you want to delete this activity?" StyleId="_deleteActivityContent" IsVisible="False" FontFamily="Roboto" FontSize="16" VerticalOptions="Center" TextColor="{DynamicResource ContentForegroundAlt1}" Padding="24, 0"/>
                            </Grid>
                        </DataTemplate>
                    </popup:SfPopup.ContentTemplate>
                    <popup:SfPopup.FooterTemplate>
                        <DataTemplate>
                            <Grid ChildAdded="OnChildAdded">
                                <!--View Activity-->
                                <Grid StyleId="_viewActivityFooter" IsVisible="False" Padding="24, 16">
                                    <HorizontalStackLayout Spacing="15" HorizontalOptions="Start">
                                        <Border Stroke="{DynamicResource PrimaryBackground}" Background="{AppThemeBinding Light={StaticResource White}, Dark={DynamicResource ContentBackground}}" HeightRequest="40" WidthRequest="73">
                                            <Border.StrokeShape>
                                                <RoundRectangle CornerRadius="20" />
                                            </Border.StrokeShape>
                                            <effects:SfEffectsView>
                                                <effects:SfEffectsView.GestureRecognizers>
                                                    <TapGestureRecognizer Tapped="OnEditButtonTapped" />
                                                </effects:SfEffectsView.GestureRecognizers>
                                                <Label Text="Edit" TextColor="{DynamicResource PrimaryBackground}" FontAttributes="Bold" FontFamily="Roboto" HorizontalOptions="Center" VerticalOptions="Center" />
                                            </effects:SfEffectsView>
                                        </Border>
                                        <Border Stroke="{DynamicResource PrimaryBackground}" Background="{AppThemeBinding Light={StaticResource White}, Dark={DynamicResource ContentBackground}}" HeightRequest="40" WidthRequest="89">
                                            <Border.StrokeShape>
                                                <RoundRectangle CornerRadius="20" />
                                            </Border.StrokeShape>
                                            <effects:SfEffectsView>
                                                <effects:SfEffectsView.GestureRecognizers>
                                                    <TapGestureRecognizer Tapped="OnDeleteButtonTapped" />
                                                </effects:SfEffectsView.GestureRecognizers>
                                                <Label Text="Delete" TextColor="{DynamicResource PrimaryBackground}" FontAttributes="Bold" FontFamily="Roboto" HorizontalOptions="Center" VerticalOptions="Center" />
                                            </effects:SfEffectsView>
                                        </Border>
                                    </HorizontalStackLayout>
                                    <Border Background="{DynamicResource PrimaryBackground}" StrokeThickness="0" HeightRequest="40" WidthRequest="84" HorizontalOptions="End">
                                        <Border.StrokeShape>
                                            <RoundRectangle CornerRadius="20" />
                                        </Border.StrokeShape>
                                        <effects:SfEffectsView>
                                            <effects:SfEffectsView.GestureRecognizers>
                                                <TapGestureRecognizer Tapped="OnCloseButtonTapped" />
                                            </effects:SfEffectsView.GestureRecognizers>
                                            <Label Text="Close" TextColor="{DynamicResource PrimaryForeground}" FontAttributes="Bold" FontFamily="Roboto" HorizontalOptions="Center" VerticalOptions="Center" IsEnabled="False" />
                                        </effects:SfEffectsView>
                                    </Border>
                                </Grid>
                                <!--Edit Activity-->
                                <Grid StyleId="_editActivityFooter" IsVisible="False" Padding="24, 16">
                                    <HorizontalStackLayout Spacing="15" HorizontalOptions="End">
                                        <Border Stroke="{DynamicResource PrimaryBackground}" Background="{AppThemeBinding Light={StaticResource White}, Dark={DynamicResource ContentBackground}}" HeightRequest="40" WidthRequest="92">
                                            <Border.StrokeShape>
                                                <RoundRectangle CornerRadius="20" />
                                            </Border.StrokeShape>
                                            <effects:SfEffectsView>
                                                <effects:SfEffectsView.GestureRecognizers>
                                                    <TapGestureRecognizer Tapped="OnCloseButtonTapped" />
                                                </effects:SfEffectsView.GestureRecognizers>
                                                <Label Text="Cancel" TextColor="{DynamicResource PrimaryBackground}" FontAttributes="Bold" FontFamily="Roboto" HorizontalOptions="Center" VerticalOptions="Center" />
                                            </effects:SfEffectsView>
                                        </Border>
                                        <Border Background="{DynamicResource PrimaryBackground}" StrokeThickness="0" HeightRequest="40" WidthRequest="74">
                                            <Border.StrokeShape>
                                                <RoundRectangle CornerRadius="20" />
                                            </Border.StrokeShape>
                                            <effects:SfEffectsView>
                                                <effects:SfEffectsView.GestureRecognizers>
                                                    <TapGestureRecognizer Tapped="OnSaveTapped" />
                                                </effects:SfEffectsView.GestureRecognizers>
                                                <Label Text="Save" TextColor="{DynamicResource PrimaryForeground}" FontAttributes="Bold" FontFamily="Roboto" HorizontalOptions="Center" VerticalOptions="Center" IsEnabled="False" />
                                            </effects:SfEffectsView>
                                        </Border>
                                    </HorizontalStackLayout>
                                </Grid>
                                <!--Delete Activity-->
                                <Grid StyleId="_deleteActivityFooter" IsVisible="False" Padding="24, 16">
                                    <HorizontalStackLayout Spacing="15" HorizontalOptions="End">
                                        <Border Stroke="{DynamicResource PrimaryBackground}" Background="{AppThemeBinding Light={StaticResource White}, Dark={DynamicResource ContentBackground}}" HeightRequest="40" WidthRequest="92">
                                            <Border.StrokeShape>
                                                <RoundRectangle CornerRadius="20" />
                                            </Border.StrokeShape>
                                            <effects:SfEffectsView>
                                                <effects:SfEffectsView.GestureRecognizers>
                                                    <TapGestureRecognizer Tapped="OnCloseButtonTapped" />
                                                </effects:SfEffectsView.GestureRecognizers>
                                                <Label Text="Cancel" TextColor="{DynamicResource PrimaryBackground}" FontAttributes="Bold" FontFamily="Roboto" HorizontalOptions="Center" VerticalOptions="Center" />
                                            </effects:SfEffectsView>
                                        </Border>
                                        <Border Background="#C20D32" StrokeThickness="0" HeightRequest="40" WidthRequest="89">
                                            <Border.StrokeShape>
                                                <RoundRectangle CornerRadius="20" />
                                            </Border.StrokeShape>
                                            <effects:SfEffectsView>
                                                <effects:SfEffectsView.GestureRecognizers>
                                                    <TapGestureRecognizer Tapped="OnDeleteActivityTapped" />
                                                </effects:SfEffectsView.GestureRecognizers>
                                                <Label Text="Delete" TextColor="White" FontAttributes="Bold" FontFamily="Roboto" HorizontalOptions="Center" VerticalOptions="Center" IsEnabled="False" />
                                            </effects:SfEffectsView>
                                        </Border>
                                    </HorizontalStackLayout>
                                </Grid>
                            </Grid>
                        </DataTemplate>
                    </popup:SfPopup.FooterTemplate>
                </popup:SfPopup>
                <calendar:SfCalendar x:Name="calendar" Grid.ColumnSpan="3" SelectedDate="{Binding SelectedDate, Mode=TwoWay}" Mode="Dialog" SelectionMode="Single" View="Month" Background="Transparent" BackgroundColor="{AppThemeBinding Light={StaticResource White}, Dark={DynamicResource ContentBackground}}" SelectionChanged="Calendar_SelectionChanged" />
                <Border WidthRequest="40" HeightRequest="40" StrokeThickness="0" Grid.Column="0" HorizontalOptions="End">
                    <Border.StrokeShape>
                        <RoundRectangle CornerRadius="20" />
                    </Border.StrokeShape>
                    <effects:SfEffectsView>
                        <effects:SfEffectsView.GestureRecognizers>
                            <TapGestureRecognizer Tapped="PreviousIcon_Tapped" />
                        </effects:SfEffectsView.GestureRecognizers>
                        <Label Text="&#xe712;" FontFamily="FitnessTrackerIcon" FontSize="24" HorizontalOptions="Center" VerticalOptions="Center" Style="{StaticResource Icon}" />
                    </effects:SfEffectsView>
                </Border>
                <Border StrokeThickness="0" Grid.Column="1">
                    <Border.StrokeShape>
                        <RoundRectangle CornerRadius="40" />
                    </Border.StrokeShape>
                    <effects:SfEffectsView VerticalOptions="Center">
                        <effects:SfEffectsView.GestureRecognizers>
                            <TapGestureRecognizer Tapped="DayLabel_Tapped" />
                        </effects:SfEffectsView.GestureRecognizers>
                        <VerticalStackLayout Spacing="5">
                            <Label x:Name="dayLabel" Text="{Binding SelectedDate, StringFormat='{0:dddd, d MMMM}'}" FontFamily="Roboto" FontSize="14" FontAttributes="Bold" HorizontalOptions="Center" VerticalOptions="Center" Style="{StaticResource Header}" />
                            <HorizontalStackLayout HorizontalOptions="Center">
                                <Label Text="{Binding ., Converter={StaticResource StepCalorieIconConverter}}" FontFamily="FitnessTrackerIcon" FontSize="14" VerticalOptions="Center" TextColor="{Binding ., Converter={StaticResource StepCalorieIconConverter}, ConverterParameter=Color}" />
                                <Label FontFamily="Roboto" FontSize="14" Style="{StaticResource SubHeader}">
                                    <Label.Text>
                                        <MultiBinding Converter="{StaticResource StepCalorieConverter}">
                                            <Binding Path="SelectedActivityType" />
                                            <Binding Path="TotalSteps" />
                                            <Binding Path="TotalCalories" />
                                        </MultiBinding>
                                    </Label.Text>
                                </Label>
                            </HorizontalStackLayout>
                        </VerticalStackLayout>
                    </effects:SfEffectsView>
                </Border>
                <Border x:Name="nextIcon" IsEnabled="False" WidthRequest="40" HeightRequest="40" StrokeThickness="0" Grid.Column="2" HorizontalOptions="Start">
                    <Border.StrokeShape>
                        <RoundRectangle CornerRadius="20" />
                    </Border.StrokeShape>
                    <effects:SfEffectsView Grid.Column="2">
                        <effects:SfEffectsView.GestureRecognizers>
                            <TapGestureRecognizer Tapped="NextIcon_Tapped" />
                        </effects:SfEffectsView.GestureRecognizers>
                        <Label x:Name="nextIconLabel" Text="&#xe713;" FontFamily="FitnessTrackerIcon" FontSize="24" HorizontalOptions="Center" VerticalOptions="Center" Style="{StaticResource Icon}" />
                    </effects:SfEffectsView>
                </Border>
            </Grid>
            <Grid RowDefinitions="Auto, *" Grid.Row="1" Padding="16">
                <VerticalStackLayout Grid.Row="0" Spacing="10">
                    <!-- Chart -->
                    <Grid Padding="32, 0">
                        <chart:SfCartesianChart PaletteBrushes="{Binding ChartColor}" HeightRequest="250">
                            <chart:SfCartesianChart.XAxes>
                                <chart:DateTimeAxis IntervalType="Hours" Interval="2" EdgeLabelsVisibilityMode="AlwaysVisible" Minimum="{Binding MinStartTime}" Maximum="{Binding MaxEndTime}" ShowMajorGridLines="False" LabelStyle="{chart:ChartAxisLabelStyle LabelFormat='h tt'}">
                                    <chart:DateTimeAxis.MajorTickStyle>
                                        <chart:ChartAxisTickStyle TickSize="0" />
                                    </chart:DateTimeAxis.MajorTickStyle>
                                </chart:DateTimeAxis>
                            </chart:SfCartesianChart.XAxes>
                            <chart:SfCartesianChart.YAxes>
                                <chart:NumericalAxis IsVisible="False" />
                            </chart:SfCartesianChart.YAxes>
                            <model:ColumnSeriesExt ItemsSource="{Binding WalkingChartList}" EnableTooltip="True" XBindingPath="StartTime" YBindingPath="{Binding YBindingProperty}" CornerRadius="4, 4, 0, 0" Width="0.4" Spacing="0.5"/>
                        </chart:SfCartesianChart>
                    </Grid>
                    <!-- Divider -->
                    <Border Background="{DynamicResource Border}" HeightRequest="1" Margin="8, 0, 8, 8" VerticalOptions="Start"/>
                </VerticalStackLayout>
                <!-- CollectionView -->
                <CollectionView Grid.Row="1" ItemsSource="{Binding WalkingList}" SelectionMode="Single" VerticalOptions="FillAndExpand">
                    <CollectionView.ItemTemplate>
                        <DataTemplate>
                            <Grid ColumnDefinitions=".8*, .2*" ChildAdded="OnChildAdded">
                                <VerticalStackLayout Grid.Column="0" Padding="10" Spacing="5">
                                    <Label>
                                        <Label.FormattedText>
                                            <FormattedString>
                                                <Span Text="{Binding ., Converter={StaticResource ActivityIconConverter}}" FontFamily="FitnessTrackerIcon" FontSize="14" TextColor="{DynamicResource IconColor}" />
                                                <Span Text="{Binding StartTime, StringFormat='{0: hh:mm tt}'}" FontSize="12" TextColor="{DynamicResource ContentForegroundAlt1}" />
                                            </FormattedString>
                                        </Label.FormattedText>
                                    </Label>
                                    <Label Text="{Binding Title}" FontFamily="Roboto" FontSize="16" Style="{StaticResource Header}"/>
                                    <HorizontalStackLayout Spacing="5">
                                        <Label Text="{Binding ., Converter={StaticResource DurationConverter}}" FontFamily="Roboto" FontSize="14" Style="{StaticResource SubHeader}" />
                                        <Label Text="{Binding ., Converter={StaticResource StepCalorieIconConverter}}" FontFamily="FitnessTrackerIcon" FontSize="14" VerticalOptions="Center" TextColor="{Binding ., Converter={StaticResource StepCalorieIconConverter}, ConverterParameter=Color}" />
                                        <Label Text="{Binding ., Converter={StaticResource ActivityConverter}}" FontFamily="Roboto" FontSize="14" Style="{StaticResource SubHeader}" />
                                    </HorizontalStackLayout>
                                </VerticalStackLayout>
                                <Border StyleId="_details" Grid.Column="1" StrokeThickness="0" HeightRequest="40" WidthRequest="40" VerticalOptions="Center" HorizontalOptions="Center">
                                    <Border.StrokeShape>
                                        <RoundRectangle CornerRadius="20" />
                                    </Border.StrokeShape>
                                    <effects:SfEffectsView>
                                        <effects:SfEffectsView.GestureRecognizers>
                                            <TapGestureRecognizer Tapped="OnDetailsTapped" />
                                        </effects:SfEffectsView.GestureRecognizers>
                                        <Label Text="&#xe732;" FontFamily="MauiSampleFontIcon" FontSize="24" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" />
                                    </effects:SfEffectsView>
                                </Border>
                            </Grid>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
                <popup:SfPopup x:Name="detailspopup" Grid.Column="1" ShowOverlayAlways="False" AutoCloseDuration="5000" ShowHeader="False" ShowFooter="False" HeightRequest="116" WidthRequest="148">
                    <popup:SfPopup.PopupStyle>
                        <popup:PopupStyle CornerRadius="10" HasShadow="True"/>
                    </popup:SfPopup.PopupStyle>
                    <popup:SfPopup.ContentTemplate>
                        <DataTemplate>
                            <VerticalStackLayout Spacing="10" Padding="16" Background="{AppThemeBinding Light={StaticResource White}, Dark={DynamicResource ContentBackground}}">
                                <effects:SfEffectsView>
                                    <effects:SfEffectsView.GestureRecognizers>
                                        <TapGestureRecognizer Tapped="OnViewTapped"/>
                                    </effects:SfEffectsView.GestureRecognizers>
                                    <HorizontalStackLayout Spacing="12" VerticalOptions="Center">
                                        <Label Text="&#xe752;" FontFamily="MauiSampleFontIcon" FontSize="18" VerticalOptions="Center"/>
                                        <Label Text="View" FontFamily="Roboto" FontSize="16" VerticalOptions="Center"/>
                                    </HorizontalStackLayout>
                                </effects:SfEffectsView>
                                <effects:SfEffectsView>
                                    <effects:SfEffectsView.GestureRecognizers>
                                        <TapGestureRecognizer Tapped="OnEditTapped"/>
                                    </effects:SfEffectsView.GestureRecognizers>
                                    <HorizontalStackLayout Spacing="12" VerticalOptions="Center">
                                        <Label Text="&#xe70c;" FontFamily="FitnessTrackerIcon" FontSize="18" VerticalOptions="Center"/>
                                        <Label Text="Edit" FontFamily="Roboto" FontSize="16" VerticalOptions="Center"/>
                                    </HorizontalStackLayout>
                                </effects:SfEffectsView>
                                <effects:SfEffectsView>
                                    <effects:SfEffectsView.GestureRecognizers>
                                        <TapGestureRecognizer Tapped="OnDeleteTapped"/>
                                    </effects:SfEffectsView.GestureRecognizers>
                                    <HorizontalStackLayout Spacing="12" VerticalOptions="Center">
                                        <Label Text="&#xe70b;" FontFamily="FitnessTrackerIcon" FontSize="18" VerticalOptions="Center"/>
                                        <Label Text="Delete" FontFamily="Roboto" FontSize="16" VerticalOptions="Center"/>
                                    </HorizontalStackLayout>
                                </effects:SfEffectsView>
                            </VerticalStackLayout>
                        </DataTemplate>
                    </popup:SfPopup.ContentTemplate>
                </popup:SfPopup>
            </Grid>
        </Grid>
    </ContentView.Content>

</ContentView>